version: '3.9'

services:

  db:
    image: postgres:15
    container_name: db
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${PORT_DB}:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USERNAME}" ]
      interval: 5s
      timeout: 10s
      retries: 5

  pgbouncer:
    build:
      context: database/load_balancer
      dockerfile: Dockerfile_bouncer
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGPOOL_PARAMS_BACKEND_HOSTNAME0: db
    ports:
      - "${PORT_BOUNCER}:6432"
    depends_on:
      - db

  migrations:
    image: liquibase/liquibase
    volumes:
      - ./migrations/changelog:/liquibase/changelog
    environment:
      LIQUIBASE_COMMAND_URL: jdbc:postgresql://${HOST_DB}:5432/${POSTGRES_DATABASE}
      LIQUIBASE_COMMAND_USERNAME: ${POSTGRES_USERNAME}
      LIQUIBASE_COMMAND_PASSWORD: ${POSTGRES_PASSWORD}
      LIQUIBASE_COMMAND_CHANGELOG_FILE: changelog/db.changelog-master.xml
    command: ["update"]
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - migrations

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:${NGINX_PORT}"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    logging:
      driver: "none"

  keycloak:
    image: quay.io/keycloak/keycloak:26.2
    container_name: keycloak
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://${HOST_DB}:5432/${POSTGRES_DATABASE}
      KC_DB_USERNAME: ${POSTGRES_USERNAME}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: localhost
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "${KC_PORT}:8080"
    depends_on:
      - pgbouncer



volumes:
  db_data:
    driver: local
  pgadmin_data:



